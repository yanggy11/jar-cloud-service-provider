<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanggy.cloud.mapper.RoleMapper">
    <resultMap id="roleMap" type="com.yanggy.cloud.entity.Role">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getAllRolesInpage" resultMap="roleMap" >
        select id, role, roleName, create_time, update_time, delete_flag from role
        order by id
        limit #{offset}, #{size}
    </select>

    <select id="countRoutes" resultType="java.lang.Integer">
        select count(id) from role
    </select>

    <insert id="addRole" parameterType="com.yanggy.cloud.entity.Role">
        insert into role (role,roleName) values(#{role},#{roleName})
    </insert>
    <update id="editRole" parameterType="com.yanggy.cloud.entity.Role">
        update role set role = #{role},roleName = #{roleName}, update_time = current_time() where id = #{id}
    </update>
    <delete id="deleteRole" parameterType="java.lang.Long">
        DELETE from role where id = #{roleId}
    </delete>

    <delete id="deleteUserRole" parameterType="java.lang.Long">
        delete from user_role where role_id = #{roleId}
    </delete>

    <select id="getRoleById" parameterType="java.lang.Long" resultMap="roleMap">
        select id, role, roleName from role where id = #{roleId}
    </select>
</mapper>