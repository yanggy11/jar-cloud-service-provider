<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanggy.cloud.mapper.UserMapper">
    <resultMap id="userMap" type="com.yanggy.cloud.entity.User">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        SELECT id,name,age,sex,email,phone, create_time, update_time,delete_flag FROM users WHERE id = #{id}
    </select>

    <insert id="insertUser">
        INSERT INTO users(name,password, age, sex, email, phone) VALUES(#{name},#{password}, #{age}, #{sex}, #{email}, #{phone})
    </insert>

    <select id="findByName" parameterType="java.lang.String" resultMap="userMap">
        select id,name,password,age,sex from users where name = #{username}
    </select>
    <select id="findByNameAndPassword" resultMap="userMap">
        select id,name,password,age,sex from users where name = #{username} and password = #{password}
    </select>

    <select id="getUserList" resultMap="userMap">
        select id, name,email,phone,sex,age, create_time, update_time,delete_flag from users
        limit #{offset}, #{size}
    </select>

    <select id="countUsers" resultType="java.lang.Integer">
        select count(id) from users
    </select>

    <update id="update" parameterType="com.yanggy.cloud.entity.User">
        update users set name = #{name}, age = #{age}, sex = #{sex}, phone = #{phone}, email = #{email} where id = #{id}
    </update>

    <update id="deleteUser" parameterType="java.lang.Long">
        UPDATE users set delete_flag = 1 where id = #{userId}
    </update>
</mapper>